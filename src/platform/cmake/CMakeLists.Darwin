# Expects:
#  PLATFORM_ROOT
#
# Defines:
#  ARCAN_PLATFORM
#  FSRV_PLATFORM
#  LWA_PLATFORM
#  STDLIB
#
#  APPL_DEST
#  RES_DEST
#  APIMAN_DEST
#  MAN_DEST
#
# Modifies:
#  compile_options (global)
#  PLATFORM_HEADER (global)
#  OS_DYLIB_EXTENSION
#

message(" scanning for Darwin specific libraries. ")
find_library(IOKIT NAMES IOKit)
find_library(COREFOUNDATION NAMES CoreFoundation)
find_library(COCOA NAMES Cocoa)
find_library(AUDIOUNIT NAMES AudioUnit)
find_library(COREAUDIO NAMES CoreAudio)
find_library(AUDIOTOOLBOX NAMES AudioToolbox)

list(APPEND STDLIB)
add_definitions(
	-D__UNIX
	-DPOSIX_C_SOURCE
	-D__APPLE__
	-DARCAN_SHMIF_OVERCOMMIT
	-D_WITH_DPRINTF
	-D_GNU_SOURCE
	-DPLATFORM_HEADER=\"${PLATFORM_ROOT}/platform.h\"
)

# still not ported / updated this bit, and interpositioning
# is rather annoying on OSX still
set(DISABLE_HIJACK ON)

set(PLATFORM_PATH ${PLATFORM_ROOT}/posix)

set_property(SOURCE engine/arcan_ffunc_lut.c APPEND PROPERTY
	COMPILE_DEFINITIONS MAP_ANONYMOUS=MAP_ANON)

if (NOT APPL_DEST)
	set(APPL_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
endif()

if (NOT SCRIPTS_DEST)
	set(SCRIPTS_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
endif()

if (NOT RES_DEST)
	set(RES_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
endif()

if (NOT APIMAN_DEST)
	set(APIMAN_DEST ${CMAKE_INSTALL_PREFIX}/man/man3)
endif()

if (NOT MAN_DEST)
	set(MAN_DEST ${CMAKE_INSTALL_PREFIX}/man/man1)
endif()

# map_file is the default and doesn't need to be set here
set_property(SOURCE ${PLATFORM_PATH}/map_resource.c
				PROPERTY COMPILE_FLAGS -DMAP_FILE=0)
set_property(SOURCE engine/arcan_lua.c
	APPEND PROPERTY COMPILE_DEFINITIONS
		OS_DYLIB_EXTENSION=".dylib")

# doing like this as we don't want or
# set(ARCAN_NOLWA_DEFINITIONS MAIN_REDIR=SDL_main)

LIST(APPEND ARCAN_LIBRARIES ${IOKIT} ${COREFOUNDATION})
LIST(APPEND LWA_LIBRARIES ${IOKIT} ${COCOA} ${COREAUDIO} ${AUDIOTOOLBOX} ${AUDIOUNIT})

set(ARCAN_PLATFORM
	${PLATFORM_PATH}/open.c
	${PLATFORM_PATH}/mem.c
	${PLATFORM_PATH}/glob.c
	${PLATFORM_PATH}/map_resource.c
	${PLATFORM_PATH}/resource_io.c
	${PLATFORM_PATH}/strip_traverse.c
	${PLATFORM_PATH}/paths.c
	${PLATFORM_PATH}/dbpath.c
	${PLATFORM_PATH}/appl.c
	${PLATFORM_PATH}/../darwin/sem.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/../darwin/time.c
	${PLATFORM_PATH}/../stub/setproctitle.c
	${PLATFORM_PATH}/launch.c
	${PLATFORM_PATH}/namespace.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/frameserver.c
	${PLATFORM_PATH}/fdpassing.c
	${PLATFORM_PATH}/launch.c
	${PLATFORM_PATH}/config.c
	${PLATFORM_PATH}/random.c
	${PLATFORM_PATH}/tempfile.c
	${PLATFORM_PATH}/fsrv_guard.c
)

#set(ARCAN_LNK_FLAGS
#	"-pagezero_size 10000 -image_base 100000000")

if (ENABLE_LED)
	LIST(APPEND ARCAN_PLATFORM
	${EXTERNAL_SRC_DIR}/hidapi/hid_darwin.c
	${EXTERNAL_SRC_DIR}/hidapi/hidapi.h
	)
endif()

set(LWA_PLATFORM ${ARCAN_PLATFORM})

list(APPEND PLATFORM_SOURCES
	${PLATFORM_ROOT}/${VIDEO_PLATFORM}/video.c
	${PLATFORM_ROOT}/${INPUT_PLATFORM}/event.c
)

set (
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/../darwin/time.c
	${PLATFORM_PATH}/../darwin/sem.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/mem.c
	${PLATFORM_PATH}/fdpassing.c
	${SHMIF_SOURCES}
)

set (LWA_PLATFORM_SOURCES
	${SHMIF_SOURCES}
	${PLATFORM_SOURCES}
	${PLATFORM_PATH}/../arcan/video.c
#	${PLATFORM_PATH}/../darwin/SDLMain_fsrv.m
)

# we don't want these coming along in LWA_PLATFORM
LIST(APPEND PLATFORM_SOURCES
	${PLATFORM_PATH}/../${VIDEO_PLATFORM}/video.c
	${PLATFORM_PATH}/../${INPUT_PLATFORM}/event.c
#	${PLATFORM_PATH}/../darwin/SDLMain.m
)

SET(HIJACK_SOURCES
	hijack/arcan_target_unix.c
	hijack/arcan_target.c
	${SHMIF_SOURCES}
	frameserver/ntsc/snes_ntsc.c
 	frameserver/resampler/resample.c
)

set (
	FSRV_SOURCES
	${SHMIF_SOURCES}
	frameserver/frameserver.c
)

# kept as a 'note' on setting up cpack for darwin
#set(CPACK_BUNDLE_NAME Arcan)
#set(CPACK_BUNDLE_PLIST ${PLATFORM_PATH}/../darwin/Info.plist)
#set(CPACK_BUNDLE_ICON ${CMAKE_SOURCE_DIR}/distr/Arcan.icns)
#
#set(frameworks_dir ${bundle_name}/Contents/Frameworks/)
#set(CMAKE_INSTALL_PREFIX ${bundle_name}/Contents/MacOS/)
#set(DATA_INSTALL_DIR ".")
#set(BIN_DST "../MacOS")
#set(APPL_DST "../Resources/appl")
#set(RESOURCES_DST "../Resources/resources")

#SET(CPACK_GENERATOR ${CPACK_GENERATOR};Bundle)
